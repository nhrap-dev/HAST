#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.25.1
#  in conjunction with Tcl version 8.6
#    Sep 25, 2019 04:39:30 PM PDT  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import HAST_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = Toplevel1 (root)
    HAST_support.init(root, top)
    ######################################
    root.after(100, HAST_support.checkform,top.Run,{'Longitude*':top.LongitudeEntry,\
    'Latitude*':top.LatitudeEntry,\
    'SOID*':top.SOIDEntry,\
    'BuildingArea*':top.BuildingAreaEntry,\
    'BuildingValue*':top.BuildingValueEntry,\
    'HUSBT*':top.HUSBTEntry,\
    'ConstructionType':top.ConstructionTypeEntry,\
    'NumberOfStories':top.NumberOfStoriesEntry})
    ##########################################
    root.mainloop()

w = None
def create_Toplevel1(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel (root)
    top = Toplevel1 (w)
    HAST_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("607x450+650+150")
        top.title("HAST")
        top.configure(background="#349ded")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.SelectInput = tk.Button(top)
        self.SelectInput.place(relx=0.016, rely=0.911, height=33, width=90)
        self.SelectInput.configure(activebackground="#ececec")
        self.SelectInput.configure(activeforeground="#000000")
        self.SelectInput.configure(background="#0dc6ff")
        self.SelectInput.configure(command=lambda: HAST_support.browse_button(self.Run,{'Longitude*':self.LongitudeEntry,
    'Latitude*':self.LatitudeEntry,
    'SOID*':self.SOIDEntry,
    'BuildingArea*':self.BuildingAreaEntry,
    'BuildingValue*':self.BuildingValueEntry,
    'HUSBT*':self.HUSBTEntry,
    'ConstructionType':self.ConstructionTypeEntry,
    'NumberOfStories':self.NumberOfStoriesEntry
    }))
        self.SelectInput.configure(disabledforeground="#a3a3a3")
        self.SelectInput.configure(foreground="#000000")
        self.SelectInput.configure(highlightbackground="#d9d9d9")
        self.SelectInput.configure(highlightcolor="black")
        self.SelectInput.configure(pady="0")
        self.SelectInput.configure(text='''Select Input''')

        self.RequiredFields = tk.LabelFrame(top)
        self.RequiredFields.place(relx=0.0, rely=0.0, relheight=0.478
                , relwidth=0.56)
        self.RequiredFields.configure(relief='groove')
        self.RequiredFields.configure(foreground="black")
        self.RequiredFields.configure(text='''Required Input Fields''')
        self.RequiredFields.configure(background="#349ded")
        self.RequiredFields.configure(highlightbackground="#d9d9d9")
        self.RequiredFields.configure(highlightcolor="black")

        self.Longitude = tk.Label(self.RequiredFields)
        self.Longitude.place(relx=0.029, rely=0.14, height=26, width=76
                , bordermode='ignore')
        self.Longitude.configure(activebackground="#f9f9f9")
        self.Longitude.configure(activeforeground="black")
        self.Longitude.configure(anchor='w')
        self.Longitude.configure(background="#349ded")
        self.Longitude.configure(disabledforeground="#a3a3a3")
        self.Longitude.configure(foreground="#000000")
        self.Longitude.configure(highlightbackground="#d9d9d9")
        self.Longitude.configure(highlightcolor="black")
        self.Longitude.configure(text='''Longitude*:''')

        self.LongitudeEntry = tk.Entry(self.RequiredFields)
        self.LongitudeEntry.place(relx=0.706, rely=0.14, height=24
                , relwidth=0.276, bordermode='ignore')
        self.LongitudeEntry.configure(background="white")
        self.LongitudeEntry.configure(disabledforeground="#a3a3a3")
        self.LongitudeEntry.configure(font="TkFixedFont")
        self.LongitudeEntry.configure(foreground="#000000")
        self.LongitudeEntry.configure(highlightbackground="#d9d9d9")
        self.LongitudeEntry.configure(highlightcolor="black")
        self.LongitudeEntry.configure(insertbackground="black")
        self.LongitudeEntry.configure(selectbackground="#c4c4c4")
        self.LongitudeEntry.configure(selectforeground="black")

        self.Latitude = tk.Label(self.RequiredFields)
        self.Latitude.place(relx=0.029, rely=0.279, height=26, width=66
                , bordermode='ignore')
        self.Latitude.configure(activebackground="#f9f9f9")
        self.Latitude.configure(activeforeground="black")
        self.Latitude.configure(anchor='w')
        self.Latitude.configure(background="#349ded")
        self.Latitude.configure(disabledforeground="#a3a3a3")
        self.Latitude.configure(foreground="#000000")
        self.Latitude.configure(highlightbackground="#d9d9d9")
        self.Latitude.configure(highlightcolor="black")
        self.Latitude.configure(text='''Latitude*:''')

        self.LatitudeEntry = tk.Entry(self.RequiredFields)
        self.LatitudeEntry.place(relx=0.706, rely=0.279, height=24
                , relwidth=0.276, bordermode='ignore')
        self.LatitudeEntry.configure(background="white")
        self.LatitudeEntry.configure(disabledforeground="#a3a3a3")
        self.LatitudeEntry.configure(font="TkFixedFont")
        self.LatitudeEntry.configure(foreground="#000000")
        self.LatitudeEntry.configure(highlightbackground="#d9d9d9")
        self.LatitudeEntry.configure(highlightcolor="black")
        self.LatitudeEntry.configure(insertbackground="black")
        self.LatitudeEntry.configure(selectbackground="#c4c4c4")
        self.LatitudeEntry.configure(selectforeground="black")

        self.SOID = tk.Label(self.RequiredFields)
        self.SOID.place(relx=0.029, rely=0.419, height=26, width=166
                , bordermode='ignore')
        self.SOID.configure(activebackground="#f9f9f9")
        self.SOID.configure(activeforeground="black")
        self.SOID.configure(anchor='w')
        self.SOID.configure(background="#349ded")
        self.SOID.configure(disabledforeground="#a3a3a3")
        self.SOID.configure(foreground="#000000")
        self.SOID.configure(highlightbackground="#d9d9d9")
        self.SOID.configure(highlightcolor="black")
        self.SOID.configure(text='''Specific Occupancy ID*:''')

        self.BuildingArea = tk.Label(self.RequiredFields)
        self.BuildingArea.place(relx=0.029, rely=0.558, height=26, width=96
                , bordermode='ignore')
        self.BuildingArea.configure(activebackground="#f9f9f9")
        self.BuildingArea.configure(activeforeground="black")
        self.BuildingArea.configure(anchor='w')
        self.BuildingArea.configure(background="#349ded")
        self.BuildingArea.configure(disabledforeground="#a3a3a3")
        self.BuildingArea.configure(foreground="#000000")
        self.BuildingArea.configure(highlightbackground="#d9d9d9")
        self.BuildingArea.configure(highlightcolor="black")
        self.BuildingArea.configure(text='''Building Area*:''')

        self.BuildingValue = tk.Label(self.RequiredFields)
        self.BuildingValue.place(relx=0.029, rely=0.698, height=26, width=106
                , bordermode='ignore')
        self.BuildingValue.configure(activebackground="#f9f9f9")
        self.BuildingValue.configure(activeforeground="black")
        self.BuildingValue.configure(anchor='w')
        self.BuildingValue.configure(background="#349ded")
        self.BuildingValue.configure(disabledforeground="#a3a3a3")
        self.BuildingValue.configure(foreground="#000000")
        self.BuildingValue.configure(highlightbackground="#d9d9d9")
        self.BuildingValue.configure(highlightcolor="black")
        self.BuildingValue.configure(text='''Building Value*:''')

        self.HUSBT = tk.Label(self.RequiredFields)
        self.HUSBT.place(relx=0.029, rely=0.837, height=26, width=226
                , bordermode='ignore')
        self.HUSBT.configure(activebackground="#f9f9f9")
        self.HUSBT.configure(activeforeground="black")
        self.HUSBT.configure(anchor='w')
        self.HUSBT.configure(background="#349ded")
        self.HUSBT.configure(disabledforeground="#a3a3a3")
        self.HUSBT.configure(foreground="#000000")
        self.HUSBT.configure(highlightbackground="#d9d9d9")
        self.HUSBT.configure(highlightcolor="black")
        self.HUSBT.configure(text='''Hurricane Specific Building Type*:''')

        self.BuildingAreaEntry = tk.Entry(self.RequiredFields)
        self.BuildingAreaEntry.place(relx=0.706, rely=0.558, height=24
                , relwidth=0.276, bordermode='ignore')
        self.BuildingAreaEntry.configure(background="white")
        self.BuildingAreaEntry.configure(disabledforeground="#a3a3a3")
        self.BuildingAreaEntry.configure(font="TkFixedFont")
        self.BuildingAreaEntry.configure(foreground="#000000")
        self.BuildingAreaEntry.configure(highlightbackground="#d9d9d9")
        self.BuildingAreaEntry.configure(highlightcolor="black")
        self.BuildingAreaEntry.configure(insertbackground="black")
        self.BuildingAreaEntry.configure(selectbackground="#c4c4c4")
        self.BuildingAreaEntry.configure(selectforeground="black")

        self.BuildingValueEntry = tk.Entry(self.RequiredFields)
        self.BuildingValueEntry.place(relx=0.706, rely=0.698, height=24
                , relwidth=0.276, bordermode='ignore')
        self.BuildingValueEntry.configure(background="white")
        self.BuildingValueEntry.configure(disabledforeground="#a3a3a3")
        self.BuildingValueEntry.configure(font="TkFixedFont")
        self.BuildingValueEntry.configure(foreground="#000000")
        self.BuildingValueEntry.configure(highlightbackground="#d9d9d9")
        self.BuildingValueEntry.configure(highlightcolor="black")
        self.BuildingValueEntry.configure(insertbackground="black")
        self.BuildingValueEntry.configure(selectbackground="#c4c4c4")
        self.BuildingValueEntry.configure(selectforeground="black")

        self.HUSBTEntry = tk.Entry(self.RequiredFields)
        self.HUSBTEntry.place(relx=0.706, rely=0.837, height=24, relwidth=0.276
                , bordermode='ignore')
        self.HUSBTEntry.configure(background="white")
        self.HUSBTEntry.configure(disabledforeground="#a3a3a3")
        self.HUSBTEntry.configure(font="TkFixedFont")
        self.HUSBTEntry.configure(foreground="#000000")
        self.HUSBTEntry.configure(highlightbackground="#d9d9d9")
        self.HUSBTEntry.configure(highlightcolor="black")
        self.HUSBTEntry.configure(insertbackground="black")
        self.HUSBTEntry.configure(selectbackground="#c4c4c4")
        self.HUSBTEntry.configure(selectforeground="black")

        self.SOIDEntry = tk.Entry(self.RequiredFields)
        self.SOIDEntry.place(relx=0.706, rely=0.419, height=24, relwidth=0.276
                , bordermode='ignore')
        self.SOIDEntry.configure(background="white")
        self.SOIDEntry.configure(disabledforeground="#a3a3a3")
        self.SOIDEntry.configure(font="TkFixedFont")
        self.SOIDEntry.configure(foreground="#000000")
        self.SOIDEntry.configure(highlightbackground="#d9d9d9")
        self.SOIDEntry.configure(highlightcolor="black")
        self.SOIDEntry.configure(insertbackground="black")
        self.SOIDEntry.configure(selectbackground="#c4c4c4")
        self.SOIDEntry.configure(selectforeground="black")

        self.OptionalFields = tk.LabelFrame(top)
        self.OptionalFields.place(relx=0.56, rely=0.0, relheight=0.478
                , relwidth=0.438)
        self.OptionalFields.configure(relief='groove')
        self.OptionalFields.configure(foreground="black")
        self.OptionalFields.configure(text='''Optional Fields''')
        self.OptionalFields.configure(background="#349ded")
        self.OptionalFields.configure(highlightbackground="#d9d9d9")
        self.OptionalFields.configure(highlightcolor="black")

        self.ConstructionType = tk.Label(self.OptionalFields)
        self.ConstructionType.place(relx=0.038, rely=0.14, height=26, width=136
                , bordermode='ignore')
        self.ConstructionType.configure(activebackground="#f9f9f9")
        self.ConstructionType.configure(activeforeground="black")
        self.ConstructionType.configure(anchor='w')
        self.ConstructionType.configure(background="#349ded")
        self.ConstructionType.configure(disabledforeground="#a3a3a3")
        self.ConstructionType.configure(foreground="#000000")
        self.ConstructionType.configure(highlightbackground="#d9d9d9")
        self.ConstructionType.configure(highlightcolor="black")
        self.ConstructionType.configure(text='''Construction Type:''')

        self.ConstructionTypeEntry = tk.Entry(self.OptionalFields)
        self.ConstructionTypeEntry.place(relx=0.564, rely=0.14, height=24
                , relwidth=0.353, bordermode='ignore')
        self.ConstructionTypeEntry.configure(background="white")
        self.ConstructionTypeEntry.configure(disabledforeground="#a3a3a3")
        self.ConstructionTypeEntry.configure(font="TkFixedFont")
        self.ConstructionTypeEntry.configure(foreground="#000000")
        self.ConstructionTypeEntry.configure(highlightbackground="#d9d9d9")
        self.ConstructionTypeEntry.configure(highlightcolor="black")
        self.ConstructionTypeEntry.configure(insertbackground="black")
        self.ConstructionTypeEntry.configure(selectbackground="#c4c4c4")
        self.ConstructionTypeEntry.configure(selectforeground="black")

        self.NumberOfStoriesEntry = tk.Entry(self.OptionalFields)
        self.NumberOfStoriesEntry.place(relx=0.564, rely=0.279, height=24
                , relwidth=0.353, bordermode='ignore')
        self.NumberOfStoriesEntry.configure(background="white")
        self.NumberOfStoriesEntry.configure(disabledforeground="#a3a3a3")
        self.NumberOfStoriesEntry.configure(font="TkFixedFont")
        self.NumberOfStoriesEntry.configure(foreground="#000000")
        self.NumberOfStoriesEntry.configure(highlightbackground="#d9d9d9")
        self.NumberOfStoriesEntry.configure(highlightcolor="black")
        self.NumberOfStoriesEntry.configure(insertbackground="black")
        self.NumberOfStoriesEntry.configure(selectbackground="#c4c4c4")
        self.NumberOfStoriesEntry.configure(selectforeground="black")

        self.NumberOfStories = tk.Label(self.OptionalFields)
        self.NumberOfStories.place(relx=0.038, rely=0.279, height=26, width=136
                , bordermode='ignore')
        self.NumberOfStories.configure(activebackground="#f9f9f9")
        self.NumberOfStories.configure(activeforeground="black")
        self.NumberOfStories.configure(anchor='w')
        self.NumberOfStories.configure(background="#349ded")
        self.NumberOfStories.configure(disabledforeground="#a3a3a3")
        self.NumberOfStories.configure(foreground="#000000")
        self.NumberOfStories.configure(highlightbackground="#d9d9d9")
        self.NumberOfStories.configure(highlightcolor="black")
        self.NumberOfStories.configure(text='''Number Of Stories:''')

        self.AddMore = tk.Label(self.OptionalFields)
        self.AddMore.place(relx=0.038, rely=0.419, height=26, width=136
                , bordermode='ignore')
        self.AddMore.configure(activebackground="#f9f9f9")
        self.AddMore.configure(activeforeground="black")
        self.AddMore.configure(anchor='w')
        self.AddMore.configure(background="#349ded")
        self.AddMore.configure(disabledforeground="#a3a3a3")
        self.AddMore.configure(foreground="#000000")
        self.AddMore.configure(highlightbackground="#d9d9d9")
        self.AddMore.configure(highlightcolor="black")
        self.AddMore.configure(text='''Need To Add More''')

        self.Run = tk.Button(top)
        self.Run.place(relx=0.198, rely=0.911, height=33, width=37)
        self.Run.configure(activebackground="#ececec")
        self.Run.configure(activeforeground="#000000")
        self.Run.configure(background="#0dc6ff")
        self.Run.configure(command=HAST_support.analyze)
        self.Run.configure(disabledforeground="#a3a3a3")
        self.Run.configure(foreground="#000000")
        self.Run.configure(highlightbackground="#d9d9d9")
        self.Run.configure(highlightcolor="black")
        self.Run.configure(pady="0")
        self.Run.configure(text='''Run''')

        self.QuitButton = tk.Button(top)
        self.QuitButton.place(relx=0.906, rely=0.911, height=33, width=40)
        self.QuitButton.configure(activebackground="#ececec")
        self.QuitButton.configure(activeforeground="#000000")
        self.QuitButton.configure(background="#0dc6ff")
        self.QuitButton.configure(command=HAST_support.destroy_window)
        self.QuitButton.configure(disabledforeground="#a3a3a3")
        self.QuitButton.configure(foreground="#000000")
        self.QuitButton.configure(highlightbackground="#d9d9d9")
        self.QuitButton.configure(highlightcolor="black")
        self.QuitButton.configure(pady="0")
        self.QuitButton.configure(text='''Quit''')

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

if __name__ == '__main__':
    vp_start_gui()





