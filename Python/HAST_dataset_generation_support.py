#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 4.25.1
#  in conjunction with Tcl version 8.6
#    Oct 01, 2019 12:46:53 PM PDT  platform: Windows NT
#    Oct 01, 2019 01:00:33 PM PDT  platform: Windows NT
#    Oct 01, 2019 01:37:38 PM PDT  platform: Windows NT

import sys, csv, os


import xml.etree.ElementTree as ET
#XML setup
tree = ET.parse('settings.xml')
base = tree.getroot()
for node in tree.find('.//currentrun'):
    node.text = ''
    tree.write('settings.xml')
LUT_Path = tree.find('.//LUTPath').text
HU_States = tree.find('.//HUStates').text

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

def set_Tk_var():
    global SQLInstances
    SQLInstances = tk.StringVar()
    global StateList
    StateList = tk.StringVar()
    global States
    with open(os.path.join(LUT_Path,HU_States), newline='') as csvfile:
        reader = csv.DictReader(csvfile)
        States = [row['StateID'] for row in reader]
    #States = ['HI','WA']
    global SQLs
    SQLs = ['A server','Another server']
    global SQLsText
    SQLsText = tk.StringVar()
    global StatesText
    StatesText = tk.StringVar()

def GenerateData():
    print('HAST_dataset_generation_support.GenerateData')
    print('data ',SQLsText.get(),StatesText.get())
    sys.stdout.flush()

def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top

def destroy_window():
    # Function which closes the window.
    global top_level
    for node in tree.find('.//currentrun'):
        node.text = ''
    tree.write('settings.xml')
    top_level.destroy()
    top_level = None

if __name__ == '__main__':
    import HAST_dataset_generation
    HAST_dataset_generation.vp_start_gui()




